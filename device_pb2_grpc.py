# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import device_pb2 as device__pb2

GRPC_GENERATED_VERSION = '1.65.5'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in device_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class InitialConfigurationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterDevice = channel.unary_unary(
                '/IotDeviceManagement2.InitialConfiguration/RegisterDevice',
                request_serializer=device__pb2.RegisterDeviceRequest.SerializeToString,
                response_deserializer=device__pb2.RegisterDeviceResponse.FromString,
                _registered_method=True)
        self.UpdateOwnDevice = channel.unary_unary(
                '/IotDeviceManagement2.InitialConfiguration/UpdateOwnDevice',
                request_serializer=device__pb2.UpdateOwnDeviceRequest.SerializeToString,
                response_deserializer=device__pb2.UpdateOwnDeviceResponse.FromString,
                _registered_method=True)
        self.GetDeviceIdByDeviceName = channel.unary_unary(
                '/IotDeviceManagement2.InitialConfiguration/GetDeviceIdByDeviceName',
                request_serializer=device__pb2.GetDeviceIdByDeviceNameRequest.SerializeToString,
                response_deserializer=device__pb2.GetDeviceIdByDeviceNameResponse.FromString,
                _registered_method=True)
        self.ConfigureNetwork = channel.unary_unary(
                '/IotDeviceManagement2.InitialConfiguration/ConfigureNetwork',
                request_serializer=device__pb2.ConfigureNetworkRequest.SerializeToString,
                response_deserializer=device__pb2.ConfigureNetworkResponse.FromString,
                _registered_method=True)


class InitialConfigurationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOwnDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceIdByDeviceName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureNetwork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InitialConfigurationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDevice,
                    request_deserializer=device__pb2.RegisterDeviceRequest.FromString,
                    response_serializer=device__pb2.RegisterDeviceResponse.SerializeToString,
            ),
            'UpdateOwnDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOwnDevice,
                    request_deserializer=device__pb2.UpdateOwnDeviceRequest.FromString,
                    response_serializer=device__pb2.UpdateOwnDeviceResponse.SerializeToString,
            ),
            'GetDeviceIdByDeviceName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceIdByDeviceName,
                    request_deserializer=device__pb2.GetDeviceIdByDeviceNameRequest.FromString,
                    response_serializer=device__pb2.GetDeviceIdByDeviceNameResponse.SerializeToString,
            ),
            'ConfigureNetwork': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureNetwork,
                    request_deserializer=device__pb2.ConfigureNetworkRequest.FromString,
                    response_serializer=device__pb2.ConfigureNetworkResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IotDeviceManagement2.InitialConfiguration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('IotDeviceManagement2.InitialConfiguration', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InitialConfiguration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.InitialConfiguration/RegisterDevice',
            device__pb2.RegisterDeviceRequest.SerializeToString,
            device__pb2.RegisterDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOwnDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.InitialConfiguration/UpdateOwnDevice',
            device__pb2.UpdateOwnDeviceRequest.SerializeToString,
            device__pb2.UpdateOwnDeviceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDeviceIdByDeviceName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.InitialConfiguration/GetDeviceIdByDeviceName',
            device__pb2.GetDeviceIdByDeviceNameRequest.SerializeToString,
            device__pb2.GetDeviceIdByDeviceNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureNetwork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.InitialConfiguration/ConfigureNetwork',
            device__pb2.ConfigureNetworkRequest.SerializeToString,
            device__pb2.ConfigureNetworkResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SystemStatusServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSystemStatus = channel.unary_unary(
                '/IotDeviceManagement2.SystemStatusService/GetSystemStatus',
                request_serializer=device__pb2.SystemStatusRequest.SerializeToString,
                response_deserializer=device__pb2.SystemStatusResponse.FromString,
                _registered_method=True)
        self.GetLastRecord = channel.unary_unary(
                '/IotDeviceManagement2.SystemStatusService/GetLastRecord',
                request_serializer=device__pb2.GetLastRecordRequest.SerializeToString,
                response_deserializer=device__pb2.GetLastRecordResponse.FromString,
                _registered_method=True)


class SystemStatusServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSystemStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLastRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SystemStatusServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSystemStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSystemStatus,
                    request_deserializer=device__pb2.SystemStatusRequest.FromString,
                    response_serializer=device__pb2.SystemStatusResponse.SerializeToString,
            ),
            'GetLastRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLastRecord,
                    request_deserializer=device__pb2.GetLastRecordRequest.FromString,
                    response_serializer=device__pb2.GetLastRecordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IotDeviceManagement2.SystemStatusService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('IotDeviceManagement2.SystemStatusService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SystemStatusService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSystemStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.SystemStatusService/GetSystemStatus',
            device__pb2.SystemStatusRequest.SerializeToString,
            device__pb2.SystemStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLastRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.SystemStatusService/GetLastRecord',
            device__pb2.GetLastRecordRequest.SerializeToString,
            device__pb2.GetLastRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class FirmwareConfigurationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrentFirmwareVersion = channel.unary_unary(
                '/IotDeviceManagement2.FirmwareConfiguration/GetCurrentFirmwareVersion',
                request_serializer=device__pb2.FirmwareRequest.SerializeToString,
                response_deserializer=device__pb2.FirmwareResponse.FromString,
                _registered_method=True)
        self.UpdateFirmware = channel.unary_unary(
                '/IotDeviceManagement2.FirmwareConfiguration/UpdateFirmware',
                request_serializer=device__pb2.UpdateFirmwareRequest.SerializeToString,
                response_deserializer=device__pb2.UpdateFirmwareResponse.FromString,
                _registered_method=True)
        self.SetFirmwareVersion = channel.unary_unary(
                '/IotDeviceManagement2.FirmwareConfiguration/SetFirmwareVersion',
                request_serializer=device__pb2.SetFirmwareVersionRequest.SerializeToString,
                response_deserializer=device__pb2.SetFirmwareVersionResponse.FromString,
                _registered_method=True)


class FirmwareConfigurationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCurrentFirmwareVersion(self, request, context):
        """Method to get the current firmware version installed on the device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFirmware(self, request, context):
        """Method to update the firmware by transmitting the latest version to the client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFirmwareVersion(self, request, context):
        """Method to set the new firmware version in the database
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FirmwareConfigurationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrentFirmwareVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentFirmwareVersion,
                    request_deserializer=device__pb2.FirmwareRequest.FromString,
                    response_serializer=device__pb2.FirmwareResponse.SerializeToString,
            ),
            'UpdateFirmware': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFirmware,
                    request_deserializer=device__pb2.UpdateFirmwareRequest.FromString,
                    response_serializer=device__pb2.UpdateFirmwareResponse.SerializeToString,
            ),
            'SetFirmwareVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFirmwareVersion,
                    request_deserializer=device__pb2.SetFirmwareVersionRequest.FromString,
                    response_serializer=device__pb2.SetFirmwareVersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'IotDeviceManagement2.FirmwareConfiguration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('IotDeviceManagement2.FirmwareConfiguration', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FirmwareConfiguration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCurrentFirmwareVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.FirmwareConfiguration/GetCurrentFirmwareVersion',
            device__pb2.FirmwareRequest.SerializeToString,
            device__pb2.FirmwareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateFirmware(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.FirmwareConfiguration/UpdateFirmware',
            device__pb2.UpdateFirmwareRequest.SerializeToString,
            device__pb2.UpdateFirmwareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetFirmwareVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/IotDeviceManagement2.FirmwareConfiguration/SetFirmwareVersion',
            device__pb2.SetFirmwareVersionRequest.SerializeToString,
            device__pb2.SetFirmwareVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
